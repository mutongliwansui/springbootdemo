#security.user.name=admin
#security.user.password=123

spring.application.name=microService
server.port=7001

# logging
logging.level.root=info
#logging.path=${user.home}/logs
#logging.file=${spring.application.name}.log
custom.log.pattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %clr(%-5level){magenta} %clr(%logger{35}-%line){cyan} [%thread]:%msg%n
logging.pattern.console=${custom.log.pattern}
logging.pattern.file=${custom.log.pattern}

#mysql 建议配置超时时间
spring.datasource.url=jdbc:mysql://localhost:3306/blog?characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.initialSize=50
spring.datasource.minIdle=20
spring.datasource.maxActive=3000
# 配置获取连接等待超时的时间
spring.datasource.maxWait=5000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


spring.datasource.slave.url=jdbc:mysql://localhost:3306/package_test?characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.slave.username=root
spring.datasource.slave.password=root
spring.datasource.slave.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.slave.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.slave.testOnBorrow=true
spring.datasource.slave.validationQuery=SELECT 1
spring.datasource.slave.maxActive=3000

spring.datasource.readonly.url=jdbc:mysql://localhost:3306/blog?characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.readonly.username=root
spring.datasource.readonly.password=root
spring.datasource.readonly.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.readonly.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.readonly.testOnBorrow=true
spring.datasource.readonly.validationQuery=SELECT 1

#mybatis
mybatis.config-location = classpath:/mybatis-config.xml
mybatis.mapper-locations=classpath:/mapping/*.xml
mybatis.type-aliases-package=com.open.micro.service.dataaccess.dataobject
mybatis.scanner-packages=com.open.micro.service.dataaccess.mapper

#spring.devtools.restart.enabled=true

#velocity
spring.velocity.resourceLoaderPath=classpath:/templates/
spring.velocity.prefix=
spring.velocity.suffix=.vm
spring.velocity.cache=false
spring.velocity.check-template-location=true
spring.velocity.content-type=text/html
spring.velocity.charset=UTF-8
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8


# REDIS (RedisProperties)  
#spring.redis.database= # database name  
spring.redis.host=127.0.0.1
#spring.redis.password=root
spring.redis.port=6379
spring.redis.pool.max-idle=32
spring.redis.pool.min-idle=10
spring.redis.pool.max-active=32
#spring.redis.pool.max-wait=-1
#spring.redis.sentinel.master= # name of Redis server  
#spring.redis.sentinel.nodes= # comma-separated list of host:port pairs  

#设置国际化配置文件存放在classpath:/i18n目录下
spring.messages.basename=i18n/messages
#设置加载资源的缓存失效时间，-1表示永久有效，默认为-1
spring.messages.cache-seconds=3600
#设定message bundles编码方式，默认为UTF-8
#spring.messages.encoding=UTF-8

#mongoDB
spring.data.mongodb.uri=mongodb://host1:27017,host2:27017,host3:27017/microService?connect=direct;slaveOk=true

#etcd
etcd.location=http://host1:2379,http://host2:2379,http://host3:2379
#etcd.serviceName=etcd-cluster.example.com

#zookeeper
#spring.cloud.zookeeper.connect-string=host1:2181,host2:2181,host3:2181